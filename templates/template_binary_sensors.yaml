- trigger:
    - platform: time
      at: "00:00"
  action: 
    - service: calendar.get_events
      target:
        entity_id: calendar.school_calendar
      data: 
        duration: 
          minutes: 5
      response_variable: calendar
    - variables: 
        events: >
          {{ 
            calendar['calendar.school_calendar'].events
            | map(attribute='summary')
            | list
          }} 
  binary_sensor:
    - name: "School Day"
      state: "{{ 'School Day' in events }}"
      auto_off:
        hours: 14
        minutes: 20
    - name: "Holiday"
      state: "{{ 'Holiday' in events }}"
      auto_off:
        hours: 23
        minutes: 59
    - name: "Snow Day"
      state: "{{ 'Snow Day' in events }}"
      auto_off:
        hours: 23
        minutes: 59

- trigger:
    - platform: time
      at: "00:00"
  action: 
    - service: calendar.get_events
      target:
        entity_id: calendar.work_calendar
      data: 
        duration: 
          minutes: 5
      response_variable: calendar
    - variables: 
        events: >
          {{ 
            calendar['calendar.work_calendar'].events
            | map(attribute='summary')
            | list
          }} 
  binary_sensor:
    - name: "Work Day"
      state: "{{ 'Work Day' in events }}"
      auto_off:
        hours: 17
        minutes: 30
    - name: "Work Holiday"
      state: "{{ 'Work Holiday' in events }}"
      auto_off:
        hours: 23
        minutes: 59
    - name: "Work Travel"
      state: "{{ 'Work Travel' in events }}"
      auto_off:
        hours: 23
        minutes: 59

- trigger:
    - platform: time
      at: "00:00"
  action: 
    - service: calendar.get_events
      target:
        entity_id: calendar.lights_calendar
      data: 
        duration: 
          minutes: 5
      response_variable: calendar
    - variables: 
        events: >
          {{ 
            calendar['calendar.lights_calendar'].events
            | map(attribute='summary')
            | list
          }} 
  binary_sensor:
    - name: "Valentine"
      state: "{{ 'Valentine' in events }}"
      auto_off:
        hours: 23
        minutes: 59
    - name: "Spring"
      state: "{{ 'Halloween' in events }}"
      auto_off:
        hours: 23
        minutes: 59
    - name: "Patriotic"
      state: "{{ 'Patriotic' in events }}"
      auto_off:
        hours: 23
        minutes: 59
    - name: "Summer"
      state: "{{ 'Summer' in events }}"
      auto_off:
        hours: 23
        minutes: 59
    - name: "Halloween"
      state: "{{ 'Halloween' in events }}"
      auto_off:
        hours: 23
        minutes: 59
    - name: "Fall"
      state: "{{ 'Fall' in events }}"
      auto_off:
        hours: 23
        minutes: 59
    - name: "Christmas"
      state: "{{ 'Christmas' in events }}"
      auto_off:
        hours: 23
        minutes: 59
    - name: "Winter"
      state: "{{ 'Halloween' in events }}"
      auto_off:
        hours: 23
        minutes: 59

    - name: "Flyers"
      state: "{{ 'Flyers' in events }}"
      auto_off:
        hours: 23
        minutes: 59

    - name: "Eagles"
      state: "{{ 'Eagles' in events }}"
      auto_off:
        hours: 23
        minutes: 59

    - name: "Phillies"
      state: "{{ 'Phillies' in events }}"
      auto_off:
        hours: 23
        minutes: 59

    - name: "Penn St"
      state: "{{ 'Penn St' in events }}"
      auto_off:
        hours: 23
        minutes: 59

- sensor:
    - name: "Custom Light Schedule"
      state: >
        {{ is_state('binary_sensor.valentine', 'on')
           or is_state('binary_sensor.spring', 'on')
           or is_state('binary_sensor.patriotic', 'on')
           or is_state('binary_sensor.summer', 'on')
           or is_state('binary_sensor.halloween', 'on')
           or is_state('binary_sensor.fall', 'on')
           or is_state('binary_sensor.christmas', 'on')
           or is_state('binary_sensor.winter', 'on')
           or is_state('binary_sensor.flyers', 'on')
           or is_state('binary_sensor.eagles', 'on')
           or is_state('binary_sensor.phillies', 'on')
           or is_state('binary_sensor.penn_st', 'on') }}